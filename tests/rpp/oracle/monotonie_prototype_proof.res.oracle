[kernel] Parsing tests/rpp/monotonie_prototype_proof.c (with preprocessing)
[rpp] ***************************************
[rpp] Rpp start
[rpp] ***************************************
/* Generated by Frama-C */
/*@
axiomatic Relational_axiome_1 {
  logic int f_acsl_pure_1(int x) ;
  
  lemma Relational_lemma_1{L}:
    ∀ int x1, int x2; x1 < x2 ⇒ f_acsl_pure_1(x1) < f_acsl_pure_1(x2);
  
  }
 */
/*@ assigns \result;
    assigns \result \from x;
    
    behavior Relational_behavior_1:
      ensures \result ≡ f_acsl_pure_1(\old(x));
 */
int f(int x);

/*@
axiomatic Relational_axiome_2 {
  logic int g_acsl_pure_2(int x) ;
  
  lemma Relational_lemma_2{L}:
    ∀ int x1, int x2; x1 < x2 ⇒ g_acsl_pure_2(x1) < g_acsl_pure_2(x2);
  
  }
 */
/*@ assigns \result;
    assigns \result \from x;
    
    behavior Relational_behavior_2:
      ensures \result ≡ g_acsl_pure_2(\old(x));
 */
int g(int x)
{
  int tmp;
  tmp = f(x);
  return tmp;
}

int f_aux_1(int x);

void relational_wrapper_1(int x1, int x2)
{
  int return_variable_relational_1;
  int return_variable_relational_2;
  {
    int tmp_1;
    tmp_1 = f_aux_1(x1);
    return_variable_relational_1 = tmp_1;
  }
  {
    int tmp_2;
    tmp_2 = f_aux_1(x2);
    return_variable_relational_2 = tmp_2;
  }
  /*@ assert
      Rpp:
        x1 < x2 ⇒
        return_variable_relational_1 < return_variable_relational_2;
  */
  return;
}

/*@ assigns \result;
    assigns \result \from x;
    
    behavior Relational_behavior:
      ensures \result ≡ f_acsl_pure_1(\old(x));
 */
int f_aux_1(int x);


[rpp] ***************************************
[rpp] Rpp end
[rpp] ***************************************
