[kernel] Parsing tests/rpp/sub_function.c (with preprocessing)
[rpp] ***************************************
[rpp] Rpp start
[rpp] ***************************************
/* Generated by Frama-C */
int y;
/*@ assigns y;
    assigns y \from y, x; */
void k(int x)
{
  y += x;
  return;
}

/*@
axiomatic Relational_axiome_1 {
  predicate p_acsl_1(int x, int y_pre, int y_post) ;
  
  lemma Relational_lemma_1{L}:
    ∀ int x, int y_id4_pre, int y_id4_post, int y_id3_pre, int y_id3_post;
      p_acsl_1(x, y_id4_pre, y_id4_post) ⇒
      p_acsl_1(x, y_id3_pre, y_id3_post) ⇒
      y_id3_pre < y_id4_pre ⇒ y_id3_post < y_id4_post;
  
  }

*/
/*@ assigns y;
    assigns y \from y, x;
    
    behavior Relational_behavior_1:
      ensures p_acsl_1(\old(x), \at(y,Pre), \at(y,Post));
 */
void p(int x)
{
  y += x;
  return;
}

/*@
axiomatic Relational_axiome_2 {
  predicate f_acsl_2(int y_pre, int y_post) ;
  
  lemma Relational_lemma_2{L}:
    ∀ int y_id2_pre, int y_id2_post, int y_id1_pre, int y_id1_post;
      f_acsl_2(y_id2_pre, y_id2_post) ⇒
      f_acsl_2(y_id1_pre, y_id1_post) ⇒
      y_id1_pre < y_id2_pre ⇒ y_id1_post < y_id2_post;
  
  }

*/
/*@ assigns y;
    assigns y \from y;
    
    behavior Relational_behavior_2:
      ensures f_acsl_2(\at(y,Pre), \at(y,Post));
 */
void f(void)
{
  int x = 5;
  k(x);
  p(x);
  return;
}

int y_id2_2;

/*@ assigns y_id2_2;
    assigns y_id2_2 \from y_id2_2, x;
    
    behavior Relational_behavior:
      ensures p_acsl_1(\old(x), \at(y_id2_2,Pre), \at(y_id2_2,Post));
 */
void p_id2(int x);

/*@ assigns y_id2_2;
    assigns y_id2_2 \from y_id2_2, x; */
void k_id2(int x);

int y_id1_2;

/*@ assigns y_id1_2;
    assigns y_id1_2 \from y_id1_2, x;
    
    behavior Relational_behavior:
      ensures p_acsl_1(\old(x), \at(y_id1_2,Pre), \at(y_id1_2,Post));
 */
void p_id1(int x);

/*@ assigns y_id1_2;
    assigns y_id1_2 \from y_id1_2, x; */
void k_id1(int x);

int y_id3_1;

int y_id4_1;

void relational_wrapper_1(int x)
{
  y_id3_1 += x;
  ;
  y_id4_1 += x;
  ;
  /*@ check
      Rpp:
        \at(y_id3_1,Pre) < \at(y_id4_1,Pre) ⇒
        \at(y_id3_1,Here) < \at(y_id4_1,Here);
  */
  return;
}

void relational_wrapper_2(void)
{
  {
    int x_3 = 5;
    k_id1(x_3);
    p_id1(x_3);
    ;
  }
  {
    int x_4 = 5;
    k_id2(x_4);
    p_id2(x_4);
    ;
  }
  /*@ check
      Rpp:
        \at(y_id1_2,Pre) < \at(y_id2_2,Pre) ⇒
        \at(y_id1_2,Here) < \at(y_id2_2,Here);
  */
  return;
}


[rpp] ***************************************
[rpp] Rpp end
[rpp] ***************************************
