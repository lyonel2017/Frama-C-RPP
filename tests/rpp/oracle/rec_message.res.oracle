[kernel] Parsing tests/rpp/rec_message.c (with preprocessing)
[rpp] ***************************************
[rpp] Rpp start
[rpp] ***************************************
/* Generated by Frama-C */
int message;
/*@
axiomatic Relational_axiome_1 {
  predicate f_acsl_1(int x, int message_pre, int message_post) ;
  
  lemma Relational_lemma_1{L}:
    ∀ int x1, int message_id3_pre, int message_id3_post,
        int message_id2_pre, int message_id2_post;
      f_acsl_1((int)(x1 - 1), message_id3_pre, message_id3_post) ⇒
      f_acsl_1(x1, message_id2_pre, message_id2_post) ⇒
      x1 > 0 ⇒
      message_id2_pre ≡ message_id3_pre ⇒
      message_id2_post ≡ 1 + message_id3_post;
  
  }
 */
/*@ ensures \old(x) ≤ 0 ⇒ \at(message,Post) ≡ \at(message,Pre);
    ensures \old(x) > 0 ⇒ \at(message,Pre) + \old(x) ≡ \at(message,Post);
    assigns message;
    assigns message \from x, message;
    
    behavior Relational_behavior_1:
      ensures f_acsl_1(\old(x), \at(message,Pre), \at(message,Post));
 */
void f(int x)
{
  if (x > 0) {
    f(x - 1);
    message ++;
  }
  return;
}

void f_id2(int x);

int message_id2_1;

void f_id3(int x);

int message_id3_1;

void relational_wrapper_1(int x1)
{
  int aux_local_variable_1;
  if (x1 > 0) {
    f_id2(x1 - 1);
    message_id2_1 ++;
  }
  ;
  aux_local_variable_1 = x1 - 1;
  if (aux_local_variable_1 > 0) {
    f_id3(aux_local_variable_1 - 1);
    message_id3_1 ++;
  }
  ;
  /*@ assert
      Rpp:
        x1 > 0 ⇒
        \at(message_id2_1,Pre) ≡ \at(message_id3_1,Pre) ⇒
        \at(message_id2_1,Here) ≡ 1 + \at(message_id3_1,Here);
  */
  return;
}

/*@ ensures
      \old(x) ≤ 0 ⇒ \at(message_id3_1,Post) ≡ \at(message_id3_1,Pre);
    ensures
      \old(x) > 0 ⇒
      \at(message_id3_1,Pre) + \old(x) ≡ \at(message_id3_1,Post);
    assigns message_id3_1;
    assigns message_id3_1 \from x, message_id3_1;
    
    behavior Relational_behavior:
      ensures
        f_acsl_1(\old(x), \at(message_id3_1,Pre), \at(message_id3_1,Post));
 */
void f_id3(int x);

/*@ ensures
      \old(x) ≤ 0 ⇒ \at(message_id2_1,Post) ≡ \at(message_id2_1,Pre);
    ensures
      \old(x) > 0 ⇒
      \at(message_id2_1,Pre) + \old(x) ≡ \at(message_id2_1,Post);
    assigns message_id2_1;
    assigns message_id2_1 \from x, message_id2_1;
    
    behavior Relational_behavior:
      ensures
        f_acsl_1(\old(x), \at(message_id2_1,Pre), \at(message_id2_1,Post));
 */
void f_id2(int x);


[rpp] ***************************************
[rpp] Rpp end
[rpp] ***************************************
