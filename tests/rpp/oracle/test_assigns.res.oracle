[kernel] Parsing tests/rpp/test_assigns.c (with preprocessing)
[rpp] ***************************************
[rpp] Rpp start
[rpp] ***************************************
/* Generated by Frama-C */
int y;
/*@
axiomatic Relational_axiome_1 {
  predicate f_acsl_1(int x, int y_pre, int return_variable_relational) ;
  
  lemma Relational_lemma_1{L}:
    ∀ int x1, int x2, int y_id2_pre, int return_variable_relational_2,
        int y_id1_pre, int return_variable_relational_1;
      f_acsl_1(x2, y_id2_pre, return_variable_relational_2) ⇒
      f_acsl_1(x1, y_id1_pre, return_variable_relational_1) ⇒
      y_id1_pre < y_id2_pre ∧ x1 < x2 ⇒
      return_variable_relational_1 < return_variable_relational_2;
  
  }
 */
/*@ assigns \result;
    assigns \result \from y, x;
    
    behavior Relational_behavior_1:
      ensures f_acsl_1(\old(x), \at(y,Pre), \result);
 */
int f(int x)
{
  int __retres;
  __retres = x + y;
  return __retres;
}

int y_id1_1;

int y_id2_1;

void relational_wrapper_1(int x1, int x2)
{
  int return_variable_relational_1;
  int return_variable_relational_2;
  {
    int __retres_1;
    __retres_1 = x1 + y_id1_1;
    return_variable_relational_1 = __retres_1;
  }
  {
    int __retres_2;
    __retres_2 = x2 + y_id2_1;
    return_variable_relational_2 = __retres_2;
  }
  /*@ assert
      Rpp:
        \at(y_id1_1,Pre) < \at(y_id2_1,Pre) ∧ x1 < x2 ⇒
        return_variable_relational_1 < return_variable_relational_2;
  */
  return;
}


[rpp] ***************************************
[rpp] Rpp end
[rpp] ***************************************
