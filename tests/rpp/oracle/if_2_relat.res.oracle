[kernel] Parsing tests/rpp/if_2_relat.c (with preprocessing)
[rpp] ***************************************
[rpp] Rpp start
[rpp] ***************************************
/* Generated by Frama-C */
/*@
axiomatic Relational_axiome_1 {
  logic int trityp_acsl_pure_1(int i, int j, int k) ;
  
  lemma Relational_lemma_1{L}:
    ∀ int a, int b, int c;
      trityp_acsl_pure_1(a, b, c) ≡ trityp_acsl_pure_1(a, c, b);
  
  }
 */
/*@ assigns \result;
    assigns \result \from i, j, k;
    
    behavior Relational_behavior_1:
      ensures \result ≡ trityp_acsl_pure_1(\old(i), \old(j), \old(k));
 */
int trityp(int i, int j, int k)
{
  int __retres;
  int trityp_0 = 0;
  if (i == 0) {
    __retres = 4;
    goto return_label;
  }
  else 
    if (j == 0) {
      __retres = 4;
      goto return_label;
    }
    else 
      if (k == 0) {
        __retres = 4;
        goto return_label;
      }
      else {
        trityp_0 = 0;
        if (i == j) trityp_0 ++;
        if (i == k) trityp_0 += 2;
        if (j == k) trityp_0 += 3;
        if (trityp_0 == 0) 
          if (i + j <= k) trityp_0 = 4;
          else 
            if (j + k <= i) trityp_0 = 4;
            else 
              if (i + k <= j) trityp_0 = 4; else trityp_0 = 1;
        else 
          if (trityp_0 > 3) trityp_0 = 3;
          else 
            if (trityp_0 == 1) {
              if (i + j > k) trityp_0 = 2; else goto _LAND_1;
            }
            else 
              _LAND_1:
              if (trityp_0 == 2) {
                if (i + k > j) trityp_0 = 2; else goto _LAND_0;
              }
              else 
                _LAND_0:
                if (trityp_0 == 3) {
                  if (j + k > i) trityp_0 = 2; else goto _LAND;
                }
                else _LAND: trityp_0 = 4;
        __retres = trityp_0;
        goto return_label;
      }
  return_label: return __retres;
}

void relational_wrapper_1(int a, int b, int c)
{
  int return_variable_relational_1;
  int return_variable_relational_2;
  {
    int __retres_1;
    int trityp_0_1 = 0;
    if (a == 0) {
      __retres_1 = 4;
      goto return_label_label_1;
    }
    else 
      if (b == 0) {
        __retres_1 = 4;
        goto return_label_label_1;
      }
      else 
        if (c == 0) {
          __retres_1 = 4;
          goto return_label_label_1;
        }
        else {
          trityp_0_1 = 0;
          if (a == b) trityp_0_1 ++;
          if (a == c) trityp_0_1 += 2;
          if (b == c) trityp_0_1 += 3;
          if (trityp_0_1 == 0) 
            if (a + b <= c) trityp_0_1 = 4;
            else 
              if (b + c <= a) trityp_0_1 = 4;
              else 
                if (a + c <= b) trityp_0_1 = 4; else trityp_0_1 = 1;
          else 
            if (trityp_0_1 > 3) trityp_0_1 = 3;
            else 
              if (trityp_0_1 == 1) {
                if (a + b > c) trityp_0_1 = 2; else goto _LAND_1_label_2;
              }
              else 
                _LAND_1_label_2:
                if (trityp_0_1 == 2) {
                  if (a + c > b) trityp_0_1 = 2; else goto _LAND_0_label_3;
                }
                else 
                  _LAND_0_label_3:
                  if (trityp_0_1 == 3) {
                    if (b + c > a) trityp_0_1 = 2; else goto _LAND_label_4;
                  }
                  else _LAND_label_4: trityp_0_1 = 4;
          __retres_1 = trityp_0_1;
          goto return_label_label_1;
        }
    return_label_label_1: return_variable_relational_1 = __retres_1;
  }
  {
    int __retres_2;
    int trityp_0_2 = 0;
    if (a == 0) {
      __retres_2 = 4;
      goto return_label_label_5;
    }
    else 
      if (c == 0) {
        __retres_2 = 4;
        goto return_label_label_5;
      }
      else 
        if (b == 0) {
          __retres_2 = 4;
          goto return_label_label_5;
        }
        else {
          trityp_0_2 = 0;
          if (a == c) trityp_0_2 ++;
          if (a == b) trityp_0_2 += 2;
          if (c == b) trityp_0_2 += 3;
          if (trityp_0_2 == 0) 
            if (a + c <= b) trityp_0_2 = 4;
            else 
              if (c + b <= a) trityp_0_2 = 4;
              else 
                if (a + b <= c) trityp_0_2 = 4; else trityp_0_2 = 1;
          else 
            if (trityp_0_2 > 3) trityp_0_2 = 3;
            else 
              if (trityp_0_2 == 1) {
                if (a + c > b) trityp_0_2 = 2; else goto _LAND_1_label_6;
              }
              else 
                _LAND_1_label_6:
                if (trityp_0_2 == 2) {
                  if (a + b > c) trityp_0_2 = 2; else goto _LAND_0_label_7;
                }
                else 
                  _LAND_0_label_7:
                  if (trityp_0_2 == 3) {
                    if (c + b > a) trityp_0_2 = 2; else goto _LAND_label_8;
                  }
                  else _LAND_label_8: trityp_0_2 = 4;
          __retres_2 = trityp_0_2;
          goto return_label_label_5;
        }
    return_label_label_5: return_variable_relational_2 = __retres_2;
  }
  /*@ assert
      Rpp: return_variable_relational_1 ≡ return_variable_relational_2;
  */
  return;
}


[rpp] ***************************************
[rpp] Rpp end
[rpp] ***************************************
