[kernel] Parsing tests/../benchmarks/stackoverflow/IsoSprite-false-v2.c (with preprocessing)
[rpp] ***************************************
[rpp] Rpp start
[rpp] ***************************************
/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
struct IsoSprite {
   int minX ;
   int maxX ;
   int minY ;
   int maxY ;
   int minZ ;
   int maxZ ;
};
/*@
axiomatic Relational_axiome_1 {
  logic int compare_acsl_pure_1(struct IsoSprite o1, struct IsoSprite o2) ;
  
  lemma Relational_lemma_1{L}:
    ∀ struct IsoSprite x1, struct IsoSprite x2;
      compare_acsl_pure_1(x1, x2) ≡ -compare_acsl_pure_1(x2, x1);
  
  }
 */
/*@
axiomatic Relational_axiome_3 {
  logic int compare_acsl_pure_3(struct IsoSprite o1, struct IsoSprite o2) ;
  
  lemma Relational_lemma_3{L}:
    ∀ struct IsoSprite x1, struct IsoSprite x2, struct IsoSprite x3;
      compare_acsl_pure_3(x1, x2) ≡ 0 ⇒
      compare_acsl_pure_3(x1, x3) ≡ compare_acsl_pure_3(x2, x3);
  
  }
 */
/*@
axiomatic Relational_axiome_2 {
  logic int compare_acsl_pure_2(struct IsoSprite o1, struct IsoSprite o2) ;
  
  lemma Relational_lemma_2{L}:
    ∀ struct IsoSprite x1, struct IsoSprite x2, struct IsoSprite x3;
      compare_acsl_pure_2(x1, x2) > 0 ∧ compare_acsl_pure_2(x2, x3) > 0 ⇒
      compare_acsl_pure_2(x1, x3) > 0;
  
  }

*/
/*@ assigns \result;
    assigns \result \from o1, o2;
    
    behavior Relational_behavior_1:
      ensures \result ≡ compare_acsl_pure_1(\old(o1), \old(o2));
    
    behavior Relational_behavior_2:
      ensures \result ≡ compare_acsl_pure_2(\old(o1), \old(o2));
    
    behavior Relational_behavior_3:
      ensures \result ≡ compare_acsl_pure_3(\old(o1), \old(o2));
 */
int compare(struct IsoSprite o1, struct IsoSprite o2)
{
  int __retres;
  if (o2.maxX > o1.minX) {
    if (o2.maxY > o1.minY) {
      if (o2.minZ < o1.maxZ) {
        __retres = -1;
        goto return_label;
      }
      else goto _LAND_16;
    }
    else goto _LAND_16;
  }
  else {
    _LAND_16: ;
    if (o2.maxX > o1.minX) {
      if (o2.maxY > o1.minY) {
        if (o2.minZ > o1.maxZ) {
          __retres = 1;
          goto return_label;
        }
        else goto _LAND_14;
      }
      else goto _LAND_14;
    }
    else {
      _LAND_14: ;
      if (o2.maxX < o1.minX) {
        if (o2.maxY > o1.minY) {
          if (o2.minZ > o1.maxZ) {
            __retres = 1;
            goto return_label;
          }
          else goto _LAND_12;
        }
        else goto _LAND_12;
      }
      else {
        _LAND_12: ;
        if (o2.maxX < o1.minX) {
          if (o2.maxY < o1.minY) {
            if (o2.minZ > o1.maxZ) {
              __retres = 1;
              goto return_label;
            }
            else goto _LAND_10;
          }
          else goto _LAND_10;
        }
        else {
          _LAND_10: ;
          if (o2.maxX < o1.minX) {
            if (o2.maxY > o1.minY) {
              if (o2.minZ < o1.maxZ) {
                __retres = 1;
                goto return_label;
              }
              else goto _LAND_8;
            }
            else goto _LAND_8;
          }
          else {
            _LAND_8: ;
            if (o2.maxX > o1.minX) {
              if (o2.maxY < o1.minY) {
                if (o2.minZ > o1.maxZ) {
                  __retres = 1;
                  goto return_label;
                }
                else goto _LAND_6;
              }
              else goto _LAND_6;
            }
            else {
              _LAND_6: ;
              if (o2.maxX < o1.minX) {
                if (o2.maxY < o1.minY) {
                  if (o2.minZ > o1.maxZ) {
                    __retres = 1;
                    goto return_label;
                  }
                  else goto _LAND_4;
                }
                else goto _LAND_4;
              }
              else {
                _LAND_4: ;
                if (o2.maxX > o1.minX) {
                  if (o2.maxY < o1.minY) {
                    if (o2.minZ < o1.maxZ) {
                      __retres = 1;
                      goto return_label;
                    }
                    else goto _LAND_2;
                  }
                  else goto _LAND_2;
                }
                else {
                  _LAND_2: ;
                  if (o2.maxX < o1.minX) {
                    if (o2.maxY > o1.minY) {
                      if (o2.minZ < o1.maxZ) {
                        __retres = 1;
                        goto return_label;
                      }
                      else goto _LAND_0;
                    }
                    else goto _LAND_0;
                  }
                  else {
                    _LAND_0: ;
                    if (& o1 != & o2) {
                      __retres = 1;
                      goto return_label;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  __retres = 0;
  return_label: return __retres;
}

void relational_wrapper_1(struct IsoSprite x1, struct IsoSprite x2)
{
  int return_variable_relational_1;
  int return_variable_relational_2;
  {
    int __retres_1;
    if (x2.maxX > x1.minX) {
      if (x2.maxY > x1.minY) {
        if (x2.minZ < x1.maxZ) {
          __retres_1 = -1;
          goto return_label_label_1;
        }
        else goto _LAND_16_label_2;
      }
      else goto _LAND_16_label_2;
    }
    else {
      _LAND_16_label_2: ;
      if (x2.maxX > x1.minX) {
        if (x2.maxY > x1.minY) {
          if (x2.minZ > x1.maxZ) {
            __retres_1 = 1;
            goto return_label_label_1;
          }
          else goto _LAND_14_label_3;
        }
        else goto _LAND_14_label_3;
      }
      else {
        _LAND_14_label_3: ;
        if (x2.maxX < x1.minX) {
          if (x2.maxY > x1.minY) {
            if (x2.minZ > x1.maxZ) {
              __retres_1 = 1;
              goto return_label_label_1;
            }
            else goto _LAND_12_label_4;
          }
          else goto _LAND_12_label_4;
        }
        else {
          _LAND_12_label_4: ;
          if (x2.maxX < x1.minX) {
            if (x2.maxY < x1.minY) {
              if (x2.minZ > x1.maxZ) {
                __retres_1 = 1;
                goto return_label_label_1;
              }
              else goto _LAND_10_label_5;
            }
            else goto _LAND_10_label_5;
          }
          else {
            _LAND_10_label_5: ;
            if (x2.maxX < x1.minX) {
              if (x2.maxY > x1.minY) {
                if (x2.minZ < x1.maxZ) {
                  __retres_1 = 1;
                  goto return_label_label_1;
                }
                else goto _LAND_8_label_6;
              }
              else goto _LAND_8_label_6;
            }
            else {
              _LAND_8_label_6: ;
              if (x2.maxX > x1.minX) {
                if (x2.maxY < x1.minY) {
                  if (x2.minZ > x1.maxZ) {
                    __retres_1 = 1;
                    goto return_label_label_1;
                  }
                  else goto _LAND_6_label_7;
                }
                else goto _LAND_6_label_7;
              }
              else {
                _LAND_6_label_7: ;
                if (x2.maxX < x1.minX) {
                  if (x2.maxY < x1.minY) {
                    if (x2.minZ > x1.maxZ) {
                      __retres_1 = 1;
                      goto return_label_label_1;
                    }
                    else goto _LAND_4_label_8;
                  }
                  else goto _LAND_4_label_8;
                }
                else {
                  _LAND_4_label_8: ;
                  if (x2.maxX > x1.minX) {
                    if (x2.maxY < x1.minY) {
                      if (x2.minZ < x1.maxZ) {
                        __retres_1 = 1;
                        goto return_label_label_1;
                      }
                      else goto _LAND_2_label_9;
                    }
                    else goto _LAND_2_label_9;
                  }
                  else {
                    _LAND_2_label_9: ;
                    if (x2.maxX < x1.minX) {
                      if (x2.maxY > x1.minY) {
                        if (x2.minZ < x1.maxZ) {
                          __retres_1 = 1;
                          goto return_label_label_1;
                        }
                        else goto _LAND_0_label_10;
                      }
                      else goto _LAND_0_label_10;
                    }
                    else {
                      _LAND_0_label_10: ;
                      if (& x1 != & x2) {
                        __retres_1 = 1;
                        goto return_label_label_1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_1 = 0;
    return_label_label_1: return_variable_relational_1 = __retres_1;
  }
  {
    int __retres_2;
    if (x1.maxX > x2.minX) {
      if (x1.maxY > x2.minY) {
        if (x1.minZ < x2.maxZ) {
          __retres_2 = -1;
          goto return_label_label_11;
        }
        else goto _LAND_16_label_12;
      }
      else goto _LAND_16_label_12;
    }
    else {
      _LAND_16_label_12: ;
      if (x1.maxX > x2.minX) {
        if (x1.maxY > x2.minY) {
          if (x1.minZ > x2.maxZ) {
            __retres_2 = 1;
            goto return_label_label_11;
          }
          else goto _LAND_14_label_13;
        }
        else goto _LAND_14_label_13;
      }
      else {
        _LAND_14_label_13: ;
        if (x1.maxX < x2.minX) {
          if (x1.maxY > x2.minY) {
            if (x1.minZ > x2.maxZ) {
              __retres_2 = 1;
              goto return_label_label_11;
            }
            else goto _LAND_12_label_14;
          }
          else goto _LAND_12_label_14;
        }
        else {
          _LAND_12_label_14: ;
          if (x1.maxX < x2.minX) {
            if (x1.maxY < x2.minY) {
              if (x1.minZ > x2.maxZ) {
                __retres_2 = 1;
                goto return_label_label_11;
              }
              else goto _LAND_10_label_15;
            }
            else goto _LAND_10_label_15;
          }
          else {
            _LAND_10_label_15: ;
            if (x1.maxX < x2.minX) {
              if (x1.maxY > x2.minY) {
                if (x1.minZ < x2.maxZ) {
                  __retres_2 = 1;
                  goto return_label_label_11;
                }
                else goto _LAND_8_label_16;
              }
              else goto _LAND_8_label_16;
            }
            else {
              _LAND_8_label_16: ;
              if (x1.maxX > x2.minX) {
                if (x1.maxY < x2.minY) {
                  if (x1.minZ > x2.maxZ) {
                    __retres_2 = 1;
                    goto return_label_label_11;
                  }
                  else goto _LAND_6_label_17;
                }
                else goto _LAND_6_label_17;
              }
              else {
                _LAND_6_label_17: ;
                if (x1.maxX < x2.minX) {
                  if (x1.maxY < x2.minY) {
                    if (x1.minZ > x2.maxZ) {
                      __retres_2 = 1;
                      goto return_label_label_11;
                    }
                    else goto _LAND_4_label_18;
                  }
                  else goto _LAND_4_label_18;
                }
                else {
                  _LAND_4_label_18: ;
                  if (x1.maxX > x2.minX) {
                    if (x1.maxY < x2.minY) {
                      if (x1.minZ < x2.maxZ) {
                        __retres_2 = 1;
                        goto return_label_label_11;
                      }
                      else goto _LAND_2_label_19;
                    }
                    else goto _LAND_2_label_19;
                  }
                  else {
                    _LAND_2_label_19: ;
                    if (x1.maxX < x2.minX) {
                      if (x1.maxY > x2.minY) {
                        if (x1.minZ < x2.maxZ) {
                          __retres_2 = 1;
                          goto return_label_label_11;
                        }
                        else goto _LAND_0_label_20;
                      }
                      else goto _LAND_0_label_20;
                    }
                    else {
                      _LAND_0_label_20: ;
                      if (& x2 != & x1) {
                        __retres_2 = 1;
                        goto return_label_label_11;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_2 = 0;
    return_label_label_11: return_variable_relational_2 = __retres_2;
  }
  /*@ assert
      Rpp: return_variable_relational_1 ≡ -return_variable_relational_2;
  */
  return;
}

void relational_wrapper_2(struct IsoSprite x1, struct IsoSprite x2,
                          struct IsoSprite x3)
{
  int return_variable_relational_3;
  int return_variable_relational_4;
  int return_variable_relational_5;
  {
    int __retres_3;
    if (x2.maxX > x1.minX) {
      if (x2.maxY > x1.minY) {
        if (x2.minZ < x1.maxZ) {
          __retres_3 = -1;
          goto return_label_label_21;
        }
        else goto _LAND_16_label_22;
      }
      else goto _LAND_16_label_22;
    }
    else {
      _LAND_16_label_22: ;
      if (x2.maxX > x1.minX) {
        if (x2.maxY > x1.minY) {
          if (x2.minZ > x1.maxZ) {
            __retres_3 = 1;
            goto return_label_label_21;
          }
          else goto _LAND_14_label_23;
        }
        else goto _LAND_14_label_23;
      }
      else {
        _LAND_14_label_23: ;
        if (x2.maxX < x1.minX) {
          if (x2.maxY > x1.minY) {
            if (x2.minZ > x1.maxZ) {
              __retres_3 = 1;
              goto return_label_label_21;
            }
            else goto _LAND_12_label_24;
          }
          else goto _LAND_12_label_24;
        }
        else {
          _LAND_12_label_24: ;
          if (x2.maxX < x1.minX) {
            if (x2.maxY < x1.minY) {
              if (x2.minZ > x1.maxZ) {
                __retres_3 = 1;
                goto return_label_label_21;
              }
              else goto _LAND_10_label_25;
            }
            else goto _LAND_10_label_25;
          }
          else {
            _LAND_10_label_25: ;
            if (x2.maxX < x1.minX) {
              if (x2.maxY > x1.minY) {
                if (x2.minZ < x1.maxZ) {
                  __retres_3 = 1;
                  goto return_label_label_21;
                }
                else goto _LAND_8_label_26;
              }
              else goto _LAND_8_label_26;
            }
            else {
              _LAND_8_label_26: ;
              if (x2.maxX > x1.minX) {
                if (x2.maxY < x1.minY) {
                  if (x2.minZ > x1.maxZ) {
                    __retres_3 = 1;
                    goto return_label_label_21;
                  }
                  else goto _LAND_6_label_27;
                }
                else goto _LAND_6_label_27;
              }
              else {
                _LAND_6_label_27: ;
                if (x2.maxX < x1.minX) {
                  if (x2.maxY < x1.minY) {
                    if (x2.minZ > x1.maxZ) {
                      __retres_3 = 1;
                      goto return_label_label_21;
                    }
                    else goto _LAND_4_label_28;
                  }
                  else goto _LAND_4_label_28;
                }
                else {
                  _LAND_4_label_28: ;
                  if (x2.maxX > x1.minX) {
                    if (x2.maxY < x1.minY) {
                      if (x2.minZ < x1.maxZ) {
                        __retres_3 = 1;
                        goto return_label_label_21;
                      }
                      else goto _LAND_2_label_29;
                    }
                    else goto _LAND_2_label_29;
                  }
                  else {
                    _LAND_2_label_29: ;
                    if (x2.maxX < x1.minX) {
                      if (x2.maxY > x1.minY) {
                        if (x2.minZ < x1.maxZ) {
                          __retres_3 = 1;
                          goto return_label_label_21;
                        }
                        else goto _LAND_0_label_30;
                      }
                      else goto _LAND_0_label_30;
                    }
                    else {
                      _LAND_0_label_30: ;
                      if (& x1 != & x2) {
                        __retres_3 = 1;
                        goto return_label_label_21;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_3 = 0;
    return_label_label_21: return_variable_relational_3 = __retres_3;
  }
  {
    int __retres_4;
    if (x3.maxX > x2.minX) {
      if (x3.maxY > x2.minY) {
        if (x3.minZ < x2.maxZ) {
          __retres_4 = -1;
          goto return_label_label_31;
        }
        else goto _LAND_16_label_32;
      }
      else goto _LAND_16_label_32;
    }
    else {
      _LAND_16_label_32: ;
      if (x3.maxX > x2.minX) {
        if (x3.maxY > x2.minY) {
          if (x3.minZ > x2.maxZ) {
            __retres_4 = 1;
            goto return_label_label_31;
          }
          else goto _LAND_14_label_33;
        }
        else goto _LAND_14_label_33;
      }
      else {
        _LAND_14_label_33: ;
        if (x3.maxX < x2.minX) {
          if (x3.maxY > x2.minY) {
            if (x3.minZ > x2.maxZ) {
              __retres_4 = 1;
              goto return_label_label_31;
            }
            else goto _LAND_12_label_34;
          }
          else goto _LAND_12_label_34;
        }
        else {
          _LAND_12_label_34: ;
          if (x3.maxX < x2.minX) {
            if (x3.maxY < x2.minY) {
              if (x3.minZ > x2.maxZ) {
                __retres_4 = 1;
                goto return_label_label_31;
              }
              else goto _LAND_10_label_35;
            }
            else goto _LAND_10_label_35;
          }
          else {
            _LAND_10_label_35: ;
            if (x3.maxX < x2.minX) {
              if (x3.maxY > x2.minY) {
                if (x3.minZ < x2.maxZ) {
                  __retres_4 = 1;
                  goto return_label_label_31;
                }
                else goto _LAND_8_label_36;
              }
              else goto _LAND_8_label_36;
            }
            else {
              _LAND_8_label_36: ;
              if (x3.maxX > x2.minX) {
                if (x3.maxY < x2.minY) {
                  if (x3.minZ > x2.maxZ) {
                    __retres_4 = 1;
                    goto return_label_label_31;
                  }
                  else goto _LAND_6_label_37;
                }
                else goto _LAND_6_label_37;
              }
              else {
                _LAND_6_label_37: ;
                if (x3.maxX < x2.minX) {
                  if (x3.maxY < x2.minY) {
                    if (x3.minZ > x2.maxZ) {
                      __retres_4 = 1;
                      goto return_label_label_31;
                    }
                    else goto _LAND_4_label_38;
                  }
                  else goto _LAND_4_label_38;
                }
                else {
                  _LAND_4_label_38: ;
                  if (x3.maxX > x2.minX) {
                    if (x3.maxY < x2.minY) {
                      if (x3.minZ < x2.maxZ) {
                        __retres_4 = 1;
                        goto return_label_label_31;
                      }
                      else goto _LAND_2_label_39;
                    }
                    else goto _LAND_2_label_39;
                  }
                  else {
                    _LAND_2_label_39: ;
                    if (x3.maxX < x2.minX) {
                      if (x3.maxY > x2.minY) {
                        if (x3.minZ < x2.maxZ) {
                          __retres_4 = 1;
                          goto return_label_label_31;
                        }
                        else goto _LAND_0_label_40;
                      }
                      else goto _LAND_0_label_40;
                    }
                    else {
                      _LAND_0_label_40: ;
                      if (& x2 != & x3) {
                        __retres_4 = 1;
                        goto return_label_label_31;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_4 = 0;
    return_label_label_31: return_variable_relational_4 = __retres_4;
  }
  {
    int __retres_5;
    if (x3.maxX > x1.minX) {
      if (x3.maxY > x1.minY) {
        if (x3.minZ < x1.maxZ) {
          __retres_5 = -1;
          goto return_label_label_41;
        }
        else goto _LAND_16_label_42;
      }
      else goto _LAND_16_label_42;
    }
    else {
      _LAND_16_label_42: ;
      if (x3.maxX > x1.minX) {
        if (x3.maxY > x1.minY) {
          if (x3.minZ > x1.maxZ) {
            __retres_5 = 1;
            goto return_label_label_41;
          }
          else goto _LAND_14_label_43;
        }
        else goto _LAND_14_label_43;
      }
      else {
        _LAND_14_label_43: ;
        if (x3.maxX < x1.minX) {
          if (x3.maxY > x1.minY) {
            if (x3.minZ > x1.maxZ) {
              __retres_5 = 1;
              goto return_label_label_41;
            }
            else goto _LAND_12_label_44;
          }
          else goto _LAND_12_label_44;
        }
        else {
          _LAND_12_label_44: ;
          if (x3.maxX < x1.minX) {
            if (x3.maxY < x1.minY) {
              if (x3.minZ > x1.maxZ) {
                __retres_5 = 1;
                goto return_label_label_41;
              }
              else goto _LAND_10_label_45;
            }
            else goto _LAND_10_label_45;
          }
          else {
            _LAND_10_label_45: ;
            if (x3.maxX < x1.minX) {
              if (x3.maxY > x1.minY) {
                if (x3.minZ < x1.maxZ) {
                  __retres_5 = 1;
                  goto return_label_label_41;
                }
                else goto _LAND_8_label_46;
              }
              else goto _LAND_8_label_46;
            }
            else {
              _LAND_8_label_46: ;
              if (x3.maxX > x1.minX) {
                if (x3.maxY < x1.minY) {
                  if (x3.minZ > x1.maxZ) {
                    __retres_5 = 1;
                    goto return_label_label_41;
                  }
                  else goto _LAND_6_label_47;
                }
                else goto _LAND_6_label_47;
              }
              else {
                _LAND_6_label_47: ;
                if (x3.maxX < x1.minX) {
                  if (x3.maxY < x1.minY) {
                    if (x3.minZ > x1.maxZ) {
                      __retres_5 = 1;
                      goto return_label_label_41;
                    }
                    else goto _LAND_4_label_48;
                  }
                  else goto _LAND_4_label_48;
                }
                else {
                  _LAND_4_label_48: ;
                  if (x3.maxX > x1.minX) {
                    if (x3.maxY < x1.minY) {
                      if (x3.minZ < x1.maxZ) {
                        __retres_5 = 1;
                        goto return_label_label_41;
                      }
                      else goto _LAND_2_label_49;
                    }
                    else goto _LAND_2_label_49;
                  }
                  else {
                    _LAND_2_label_49: ;
                    if (x3.maxX < x1.minX) {
                      if (x3.maxY > x1.minY) {
                        if (x3.minZ < x1.maxZ) {
                          __retres_5 = 1;
                          goto return_label_label_41;
                        }
                        else goto _LAND_0_label_50;
                      }
                      else goto _LAND_0_label_50;
                    }
                    else {
                      _LAND_0_label_50: ;
                      if (& x1 != & x3) {
                        __retres_5 = 1;
                        goto return_label_label_41;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_5 = 0;
    return_label_label_41: return_variable_relational_5 = __retres_5;
  }
  /*@ assert
      Rpp:
        return_variable_relational_3 > 0 ∧ return_variable_relational_4 > 0 ⇒
        return_variable_relational_5 > 0;
  */
  return;
}

void relational_wrapper_3(struct IsoSprite x1, struct IsoSprite x2,
                          struct IsoSprite x3)
{
  int return_variable_relational_6;
  int return_variable_relational_7;
  int return_variable_relational_8;
  {
    int __retres_6;
    if (x2.maxX > x1.minX) {
      if (x2.maxY > x1.minY) {
        if (x2.minZ < x1.maxZ) {
          __retres_6 = -1;
          goto return_label_label_51;
        }
        else goto _LAND_16_label_52;
      }
      else goto _LAND_16_label_52;
    }
    else {
      _LAND_16_label_52: ;
      if (x2.maxX > x1.minX) {
        if (x2.maxY > x1.minY) {
          if (x2.minZ > x1.maxZ) {
            __retres_6 = 1;
            goto return_label_label_51;
          }
          else goto _LAND_14_label_53;
        }
        else goto _LAND_14_label_53;
      }
      else {
        _LAND_14_label_53: ;
        if (x2.maxX < x1.minX) {
          if (x2.maxY > x1.minY) {
            if (x2.minZ > x1.maxZ) {
              __retres_6 = 1;
              goto return_label_label_51;
            }
            else goto _LAND_12_label_54;
          }
          else goto _LAND_12_label_54;
        }
        else {
          _LAND_12_label_54: ;
          if (x2.maxX < x1.minX) {
            if (x2.maxY < x1.minY) {
              if (x2.minZ > x1.maxZ) {
                __retres_6 = 1;
                goto return_label_label_51;
              }
              else goto _LAND_10_label_55;
            }
            else goto _LAND_10_label_55;
          }
          else {
            _LAND_10_label_55: ;
            if (x2.maxX < x1.minX) {
              if (x2.maxY > x1.minY) {
                if (x2.minZ < x1.maxZ) {
                  __retres_6 = 1;
                  goto return_label_label_51;
                }
                else goto _LAND_8_label_56;
              }
              else goto _LAND_8_label_56;
            }
            else {
              _LAND_8_label_56: ;
              if (x2.maxX > x1.minX) {
                if (x2.maxY < x1.minY) {
                  if (x2.minZ > x1.maxZ) {
                    __retres_6 = 1;
                    goto return_label_label_51;
                  }
                  else goto _LAND_6_label_57;
                }
                else goto _LAND_6_label_57;
              }
              else {
                _LAND_6_label_57: ;
                if (x2.maxX < x1.minX) {
                  if (x2.maxY < x1.minY) {
                    if (x2.minZ > x1.maxZ) {
                      __retres_6 = 1;
                      goto return_label_label_51;
                    }
                    else goto _LAND_4_label_58;
                  }
                  else goto _LAND_4_label_58;
                }
                else {
                  _LAND_4_label_58: ;
                  if (x2.maxX > x1.minX) {
                    if (x2.maxY < x1.minY) {
                      if (x2.minZ < x1.maxZ) {
                        __retres_6 = 1;
                        goto return_label_label_51;
                      }
                      else goto _LAND_2_label_59;
                    }
                    else goto _LAND_2_label_59;
                  }
                  else {
                    _LAND_2_label_59: ;
                    if (x2.maxX < x1.minX) {
                      if (x2.maxY > x1.minY) {
                        if (x2.minZ < x1.maxZ) {
                          __retres_6 = 1;
                          goto return_label_label_51;
                        }
                        else goto _LAND_0_label_60;
                      }
                      else goto _LAND_0_label_60;
                    }
                    else {
                      _LAND_0_label_60: ;
                      if (& x1 != & x2) {
                        __retres_6 = 1;
                        goto return_label_label_51;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_6 = 0;
    return_label_label_51: return_variable_relational_6 = __retres_6;
  }
  {
    int __retres_7;
    if (x3.maxX > x1.minX) {
      if (x3.maxY > x1.minY) {
        if (x3.minZ < x1.maxZ) {
          __retres_7 = -1;
          goto return_label_label_61;
        }
        else goto _LAND_16_label_62;
      }
      else goto _LAND_16_label_62;
    }
    else {
      _LAND_16_label_62: ;
      if (x3.maxX > x1.minX) {
        if (x3.maxY > x1.minY) {
          if (x3.minZ > x1.maxZ) {
            __retres_7 = 1;
            goto return_label_label_61;
          }
          else goto _LAND_14_label_63;
        }
        else goto _LAND_14_label_63;
      }
      else {
        _LAND_14_label_63: ;
        if (x3.maxX < x1.minX) {
          if (x3.maxY > x1.minY) {
            if (x3.minZ > x1.maxZ) {
              __retres_7 = 1;
              goto return_label_label_61;
            }
            else goto _LAND_12_label_64;
          }
          else goto _LAND_12_label_64;
        }
        else {
          _LAND_12_label_64: ;
          if (x3.maxX < x1.minX) {
            if (x3.maxY < x1.minY) {
              if (x3.minZ > x1.maxZ) {
                __retres_7 = 1;
                goto return_label_label_61;
              }
              else goto _LAND_10_label_65;
            }
            else goto _LAND_10_label_65;
          }
          else {
            _LAND_10_label_65: ;
            if (x3.maxX < x1.minX) {
              if (x3.maxY > x1.minY) {
                if (x3.minZ < x1.maxZ) {
                  __retres_7 = 1;
                  goto return_label_label_61;
                }
                else goto _LAND_8_label_66;
              }
              else goto _LAND_8_label_66;
            }
            else {
              _LAND_8_label_66: ;
              if (x3.maxX > x1.minX) {
                if (x3.maxY < x1.minY) {
                  if (x3.minZ > x1.maxZ) {
                    __retres_7 = 1;
                    goto return_label_label_61;
                  }
                  else goto _LAND_6_label_67;
                }
                else goto _LAND_6_label_67;
              }
              else {
                _LAND_6_label_67: ;
                if (x3.maxX < x1.minX) {
                  if (x3.maxY < x1.minY) {
                    if (x3.minZ > x1.maxZ) {
                      __retres_7 = 1;
                      goto return_label_label_61;
                    }
                    else goto _LAND_4_label_68;
                  }
                  else goto _LAND_4_label_68;
                }
                else {
                  _LAND_4_label_68: ;
                  if (x3.maxX > x1.minX) {
                    if (x3.maxY < x1.minY) {
                      if (x3.minZ < x1.maxZ) {
                        __retres_7 = 1;
                        goto return_label_label_61;
                      }
                      else goto _LAND_2_label_69;
                    }
                    else goto _LAND_2_label_69;
                  }
                  else {
                    _LAND_2_label_69: ;
                    if (x3.maxX < x1.minX) {
                      if (x3.maxY > x1.minY) {
                        if (x3.minZ < x1.maxZ) {
                          __retres_7 = 1;
                          goto return_label_label_61;
                        }
                        else goto _LAND_0_label_70;
                      }
                      else goto _LAND_0_label_70;
                    }
                    else {
                      _LAND_0_label_70: ;
                      if (& x1 != & x3) {
                        __retres_7 = 1;
                        goto return_label_label_61;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_7 = 0;
    return_label_label_61: return_variable_relational_7 = __retres_7;
  }
  {
    int __retres_8;
    if (x3.maxX > x2.minX) {
      if (x3.maxY > x2.minY) {
        if (x3.minZ < x2.maxZ) {
          __retres_8 = -1;
          goto return_label_label_71;
        }
        else goto _LAND_16_label_72;
      }
      else goto _LAND_16_label_72;
    }
    else {
      _LAND_16_label_72: ;
      if (x3.maxX > x2.minX) {
        if (x3.maxY > x2.minY) {
          if (x3.minZ > x2.maxZ) {
            __retres_8 = 1;
            goto return_label_label_71;
          }
          else goto _LAND_14_label_73;
        }
        else goto _LAND_14_label_73;
      }
      else {
        _LAND_14_label_73: ;
        if (x3.maxX < x2.minX) {
          if (x3.maxY > x2.minY) {
            if (x3.minZ > x2.maxZ) {
              __retres_8 = 1;
              goto return_label_label_71;
            }
            else goto _LAND_12_label_74;
          }
          else goto _LAND_12_label_74;
        }
        else {
          _LAND_12_label_74: ;
          if (x3.maxX < x2.minX) {
            if (x3.maxY < x2.minY) {
              if (x3.minZ > x2.maxZ) {
                __retres_8 = 1;
                goto return_label_label_71;
              }
              else goto _LAND_10_label_75;
            }
            else goto _LAND_10_label_75;
          }
          else {
            _LAND_10_label_75: ;
            if (x3.maxX < x2.minX) {
              if (x3.maxY > x2.minY) {
                if (x3.minZ < x2.maxZ) {
                  __retres_8 = 1;
                  goto return_label_label_71;
                }
                else goto _LAND_8_label_76;
              }
              else goto _LAND_8_label_76;
            }
            else {
              _LAND_8_label_76: ;
              if (x3.maxX > x2.minX) {
                if (x3.maxY < x2.minY) {
                  if (x3.minZ > x2.maxZ) {
                    __retres_8 = 1;
                    goto return_label_label_71;
                  }
                  else goto _LAND_6_label_77;
                }
                else goto _LAND_6_label_77;
              }
              else {
                _LAND_6_label_77: ;
                if (x3.maxX < x2.minX) {
                  if (x3.maxY < x2.minY) {
                    if (x3.minZ > x2.maxZ) {
                      __retres_8 = 1;
                      goto return_label_label_71;
                    }
                    else goto _LAND_4_label_78;
                  }
                  else goto _LAND_4_label_78;
                }
                else {
                  _LAND_4_label_78: ;
                  if (x3.maxX > x2.minX) {
                    if (x3.maxY < x2.minY) {
                      if (x3.minZ < x2.maxZ) {
                        __retres_8 = 1;
                        goto return_label_label_71;
                      }
                      else goto _LAND_2_label_79;
                    }
                    else goto _LAND_2_label_79;
                  }
                  else {
                    _LAND_2_label_79: ;
                    if (x3.maxX < x2.minX) {
                      if (x3.maxY > x2.minY) {
                        if (x3.minZ < x2.maxZ) {
                          __retres_8 = 1;
                          goto return_label_label_71;
                        }
                        else goto _LAND_0_label_80;
                      }
                      else goto _LAND_0_label_80;
                    }
                    else {
                      _LAND_0_label_80: ;
                      if (& x2 != & x3) {
                        __retres_8 = 1;
                        goto return_label_label_71;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    __retres_8 = 0;
    return_label_label_71: return_variable_relational_8 = __retres_8;
  }
  /*@ assert
      Rpp:
        return_variable_relational_6 ≡ 0 ⇒
        return_variable_relational_7 ≡ return_variable_relational_8;
  */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_1(char const *format, int param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_2(char const *format, int param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_3(char const *format, int param0);

int main(void)
{
  int __retres;
  struct IsoSprite x1 =
    {.minX = 1, .maxX = 1, .minY = 1, .maxY = 1, .minZ = 1, .maxZ = 1};
  struct IsoSprite x2 =
    {.minX = 2, .maxX = 2, .minY = 2, .maxY = 2, .minZ = 1, .maxZ = -1};
  struct IsoSprite x3 =
    {.minX = 1, .maxX = 3, .minY = 1, .maxY = 3, .minZ = 0, .maxZ = 1};
  int test1 = compare(x1,x2);
  int test2 = compare(x1,x3);
  int test3 = compare(x2,x3);
  printf_va_1("First compare %d \n",test1);
  printf_va_2("Second compare %d \n",test2);
  printf_va_3("Third compare %d \n",test3);
  __retres = 1;
  return __retres;
}


[rpp] ***************************************
[rpp] Rpp end
[rpp] ***************************************
